#!/bin/bash

# Author: Trevor L Davis <trevor.l.davis@stanford.edu>
# License: revised BSD
# Usage: qsub2 example.R || qsub2 example.sas || qsub2 example.do || qsub2 example.m
# For it to work correctly you should do the following
#   Add qsub2 to ~/bin (creating directory if needed) i.e. ``mkdir ~/bin; mv qsub2 ~/bin``
#   Marking it executable i.e. ``chmod u+x ~/bin/qsub2``
# Designed for use in the keynes and barley servers at Stanford
# Extra capability if you have mutt installed

usage="Usage: `basename $0` [--help] file"
if ! [ `echo $* | grep -c help` = 0 ] || [ $# -eq 0 ]; then
    echo $USAGE >&2
    exit 1
fi
file=$1
directory=`dirname $file`
case $file in
    *.R | *.r )
        case $file in
            *.R )
                base=`basename $file .R`
                ;;
            *.r )
                base=`basename $file .r`
                ;;
        esac
        program="R"
        logfile=$directory/${base}.Rout
        ;;
    *.do )
        base=`basename $file .do`
        program="STATA"
        logfile=${base}.log
        ;;
    *.m )
        base=`basename $file .m`
        program="MATLAB"
        logfile=$directory/${base}.log
        ;;
    *.sas )
        base=`basename $file .sas`
        program="SAS"
        logfile=$directory/${base}.log
        ;;
    *.sh )
        base=`basename $file .sh`
        program="bash"
        logfile=$directory/${base}.log
        ;;
    *.f95 )
        base=`basename $file .f95`
        program="FORTRAN"
        logfile=$directory/${base}.log
        ;;
    * )
        program="unknown"
        logfile=$directory/${file}out
        ;;
esac

wd=`pwd`

qsub_output_dir=$HOME/tmp
if [ ! -d $qsub_output_dir ]; then
    mkdir $qsub_output_dir
fi

shellscript="$qsub_output_dir/${base}.sh"
echo "#!/bin/bash" > $shellscript
echo 'export LC_ALL="en_US.utf8"' >> $shellscript
echo "MYPATH=$PATH" >> $shellscript
echo 'PATH=/home/trevorld/bin:$PATH:$MYPATH:/opt/econ/bin' >> $shellscript

echo "cd $wd" >> $shellscript
if [ -e "$logfile" ]
then
    echo "echo 'Removing $logfile'" >> $shellscript
    echo "rm $logfile" >> $shellscript
fi
echo "echo 'Running $program program $file on host $HOSTNAME'" >> $shellscript
# echo 'echo "PATH: $PATH"' >> $shellscript # check if path is set up correctly
case $program in
    R )

        if [[ "$HOSTNAME" =~ "keynes" ]]
        then
            echo "module load R/3.0" >> $shellscript
        else
            true
        fi
        echo "R CMD BATCH $file $logfile" >> $shellscript
        ;;
    STATA )
        if [[ "$HOSTNAME" =~ "keynes" ]]
        then
            echo "module load StataSE-12.1" >> $shellscript
        else
            true
        fi
        echo "stata -q -b do $file" >> $shellscript
        echo "mv $logfile $directory" >> $shellscript
        logfile=$directory/$logfile
        ;;
    MATLAB )
        if [[ "$HOSTNAME" =~ "keynes" ]]
        then
            echo "module load MATLAB-R2012b" >> $shellscript
        else
            true
        fi
        echo "matlab < $file > $logfile" >> $shellscript
        ;;
    SAS )
        echo "sas $file" >> $shellscript
        ;;
    bash )
        echo "bash $file &> $logfile" >> $shellscript
        ;;
    FORTRAN )
        nag_compile $file
        echo "$directory/${base}.exe &> $logfile" >> $shellscript
        ;;
    unknown )
        echo "echo 'File $file is of unknown type. You should extend qsub2.' > $logfile" >> $shellscript
        ;;
esac

echo 'status=$?' >> $shellscript
echo 'exit $status' >> $shellscript

chmod u+x $shellscript
time_file=$qsub_output_dir/${base}_time.txt
/usr/bin/time -v --output=$time_file qsub -b y -j y -o $qsub_output_dir -sync y $shellscript
status=$?  
has_mutt=1
hash mutt 2>&- || has_mutt=0
if [ $has_mutt = 1 ]; 
then
    mutt -s "$program job $file complete [exit status $status]" -a $file $logfile -- ${USER}@stanford.edu < $time_file
else
    cat $logfile | mail -s "$program job $file complete [exit status $status]" ${USER}@stanford.edu
fi

exit $status
